name: OpenRVDAS Dev CI

on:
  push:
    branches:
      - '**'
  workflow_dispatch:

jobs:
  build:
    runs-on: self-hosted
    
    steps:
    - name: Stop all services
      run: supervisorctl stop all || true

    - name: Debug Runner Info
      run: |
        echo "Runner name: ${{ runner.name }}"
        echo "Runner OS: ${{ runner.os }}"
        echo "Runner arch: ${{ runner.arch }}"
        echo "Workflow name: ${{ github.workflow }}"
        echo "Event name: ${{ github.event_name }}"
        echo "Branch name: ${{ github.ref }}"
        echo "GitHub workspace: ${{ github.workspace }}"
        echo "Current directory: $(pwd)"
        ls -la

    - name: Navigate to project directory
      run: |
        cd /opt/openrvdas || exit 1
        echo "Current directory: $(pwd)"
        ls -la

    - name: Update repository
      working-directory: /opt/openrvdas
      run: |
        # Fetch the latest changes
        git fetch origin

        # Check if there are any local changes
        if ! git diff-index --quiet HEAD --; then
          echo "Stashing local changes"
          git stash push -m "Stashed by CI workflow"
        fi

        # Get the current branch name
        current_branch=$(git rev-parse --abbrev-ref HEAD)

        # Checkout the branch that triggered the workflow
        if [ "$current_branch" != "${{ github.ref_name }}" ]; then
          echo "Switching from $current_branch to ${{ github.ref_name }}"
          git checkout ${{ github.ref_name }} || {
            echo "Failed to checkout ${{ github.ref_name }}"
            exit 1
          }
        fi

        # Pull the latest changes
        git pull origin ${{ github.ref_name }} || {
          echo "Failed to pull latest changes from ${{ github.ref_name }}"
          exit 1
        }

        # If we stashed changes earlier, try to apply them
        if git stash list | grep -q "Stashed by CI workflow"; then
          echo "Attempting to apply stashed changes"
          git stash apply || {
            echo "Warning: Failed to apply stashed changes. They remain in the stash."
          }
        fi

        # Show the current status
        git status

    - name: Set up Python environment
      working-directory: /opt/openrvdas
      run: |
        source venv/bin/activate
        python --version
        pip --version

    - name: Install Python dependencies
      working-directory: /opt/openrvdas
      run: |
        source venv/bin/activate
        pip install -r utils/requirements.txt
        pip install -r utils/requirements_soi.txt

    - name: Run linter and code style checks
      working-directory: /opt/openrvdas
      continue-on-error: true
      run: |
        source venv/bin/activate
        flake8 . --output-file=flake8_report.txt || true
        echo "Flake8 issues found:"
        cat flake8_report.txt

    - name: Upload flake8 report
      uses: actions/upload-artifact@v4
      with:
        name: flake8-report
        path: /opt/openrvdas/flake8_report.txt

    - name: Reread and restart Supervisor services
      run: |
        supervisorctl reread
        supervisorctl update
        supervisorctl start all || true
        echo "Supervisor restart exit code: $?"

    - name: Run all tests
      working-directory: /opt/openrvdas
      env:
        PYTHONPATH: /opt/openrvdas
      run: |
        source venv/bin/activate
        python -m unittest discover -v -s . -p 'test_*.py'

    - name: Check server status
      run: |
        supervisorctl status || true
        echo "Supervisor status exit code: $?"

    - name: Error logging
      if: failure()
      working-directory: /opt/openrvdas
      run: |
        echo "Job failed. Logging additional information:"
        source venv/bin/activate
        echo "Python version: $(python --version 2>&1)"
        echo "Pip version: $(pip --version)"
        echo "Git version: $(git --version)"
        echo "Current directory: $(pwd)"
        echo "Directory contents:"
        ls -la
        echo "Git status:"
        git status
        echo "Git log (last 5 commits):"
        git log -n 5 --oneline
        echo "Supervisor status:"
        supervisorctl status || true

    - name: Success logging
      if: success()
      working-directory: /opt/openrvdas
      run: |
        echo "Build completed successfully!"
        source venv/bin/activate
        echo "Python version: $(python --version 2>&1)"
        echo "Pip version: $(pip --version)"
        echo "Git version: $(git --version)"
        echo "Current directory: $(pwd)"
        echo "Directory contents:"
        ls -lah
        echo "Git status:"
        git status
        echo "Git log (last 5 commits):"
        git log -n 5 --oneline
        echo "Supervisor status:"
        supervisorctl status || true